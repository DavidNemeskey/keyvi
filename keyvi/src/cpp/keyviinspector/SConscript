import os

#get all the build variables we need
Import('env', 'project', 'buildmode', 'debugcompilerflags', 'releasecompilerflags', 'linklibraries')
localenv = env.Clone()

buildroot = '../../../' + buildmode  #holds the root of the build directory tree
builddir = buildroot + '/' + project   #holds the build directory for this project
targetpath = builddir + '/' + project  #holds the path to the executable in the build directory

localenv.Append(LIBPATH = buildroot + "/dictionaryfsa")


#append the user's additional compile flags
#assume debugcompilerflags and releasecompilerflags are defined
if buildmode == 'debug':
   localenv.Append(CPPFLAGS=debugcompilerflags)
else:
   localenv.Append(CPPFLAGS=releasecompilerflags)

localenv.Append(CPPPATH = ['../'])

#specify the build directory
localenv.VariantDir(builddir, ".", duplicate=0)


# the compiler tool (static for now)
source = ['keyviinspector.cpp']
keyviinspector = localenv.Program(target = targetpath, source = source, LIBS = linklibraries)

# installer
prefix = "/usr/local"
localenv.Alias("install", localenv.Install(os.path.join(prefix, "bin"), keyviinspector))